type Query {
    getCompany(slug: String!): CompanyAndUserRole!
    getCompanyById(id: ID!) : Company!
    getEmployees(companyId: ID!, limit: Int = 6, offset: Int = 0): UserList!
    getIndustries(query: String!, companyId: ID): [Industry]!
    getOccupations(query: String!): [Occupation]!
    getKeywords(query: String!): [Keyword]!

    #    ================= services ================
    getServices(companyId: ID!, filter: ServiceFilter, sort: ServiceSort, limit: Int = 10, offset: Int = 0): ServiceList!
    getServicesCount(companyId: ID!, filter: ServiceFilter): Int!
    getVerifyUsesByService(serviceId: ID!, limit: Int = 10, offset: Int = 0) : CompanyInfoByServiceList!
    #    ================= Connections ================
    getCompanyConnections(companyId: ID!, options: ConnectionListOptions!): ConnectionList
    #    ================ sorting filter for connection ===============
    getCompanyConnectionTabs(companyId: ID!): [ConnectionTab]!
    getCompanyConnectionCollaborators(companyId: ID!, query: String): [IdNameItem]!
    getCompanyConnectionServices(companyId: ID!, query: String): [IdNameItem]!
    #    -------------------------- filters ----------------------
    #    getConnectionTabsRole(companyId: ID!) : [ConnectionRole]!
    #    getCollaborators(companyId: ID!, query: String!): [Collaborator]!
    #    getCollaboratorRoles(companyId: ID!, query: String!): [ConnectionRole]!
    #    getServicesProvided(companyId: ID!, query: String!): [ServiceProvided]!

    #    =============== statistic ===================
    getCompanyStatistic(companyId: ID!): CompanyStatistic

    getLocations(query: String!): [Location]
}
